run_hook () {
    # load modules
    /sbin/modprobe overlay 
    /sbin/modprobe loop
    /sbin/modprobe squashfs
    /sbin/modprobe fuse

    # prepare network
    # /bin/ifconfig eth0 up
    /bin/ipconfig eth0

    for i in "1 2 3 4 5"; do
        /bin/rdisc6 eth0 && break
    done

    # set mount handler
    mount_handler="liims_mount_handler"
    export mount_handler
}

liims_mount_handler() {
    newroot="${1}"
    mount -t tmpfs -o size=50% tmpfs $newroot
    
    if [ "${break}" = "pre" ]; then
        msg ":: '${break}' Break requested, type 'exit' to resume operation"
        launch_interactive_shell
    fi

    ro_rel="/RO"
    ro_branch="${newroot}${ro_rel}"
    rw_rel="/RW"
    rw_branch="${newroot}${rw_rel}"

    mkdir -p "$ro_branch" "$rw_branch"

    # mount read-only part
    msg ":: Mounting NFS..."

    /bin/mount -t nfs -o vers=3,nolock,tcp,intr,rsize=32768,wsize=32768 \
               "${nfsserver}:${nfspath}" "${ro_branch}"

    if [ $? != 0 -a -n "$nfsserver2" ]; then
        msg ":: Failed to mount NFS. Try fallback server..."
        /bin/mount -t nfs -o vers=3,nolock,tcp,intr,rsize=32768,wsize=32768 \
                   "${nfsserver2}:${nfspath}" "${ro_branch}"
    fi

    if [ -n "${squashfs}" ]; then
        mount -t squashfs "${ro_branch}/${squashfs}" "${ro_branch}"
    fi

    # merge root
    msg ":: Merging online files to new root..."

    root_emptydirs="boot dev mnt proc run srv sys tmp"
    root_links="bin lib lib64 sbin"
    root_rodirs="root usr opt liims"
    root_rwdirs="etc home var usr"

    for d in $root_emptydirs; do
        mkdir -p "${newroot}/$d"
    done

    for l in $root_links; do
        cp -P "${ro_branch}/$l" "${newroot}"
    done

    for d in $root_rodirs; do
        mkdir -p "${newroot}/$d"
        mount --bind "${ro_branch}/$d" "${newroot}/$d"
    done
 
    for d in $root_rwdirs; do
        mkdir -p "${rw_branch}/$d" "${rw_branch}/${d}_work" "${newroot}/$d"

        mount -t overlay overlay \
              -o lowerdir="${ro_branch}/$d" \
              -o upperdir="${rw_branch}/$d" \
              -o workdir="${rw_branch}/${d}_work" "$newroot/$d"

        if [ $? != 0 ]; then
            msg ":: Failed to merge $d via overlayfs. Fallback to unionfs."
            unionfs "${rw_rel}/$d=RW:${ro_rel}/$d=RO" "${newroot}/$d" \
                -o allow_other,use_ino,suid,dev,nonempty \
                -o cow,max_files=32768,chroot="${newroot}"
        fi
    done

    if [ "${break}" = "post" ]; then
        msg ":: '${break}' Break requested, type 'exit' to resume operation"
        launch_interactive_shell
    fi
}
